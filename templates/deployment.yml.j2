---

{% if 'apps.openshift.io' in api_groups %}
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
{% else %}
apiVersion: apps/v1
kind: Deployment
{% endif %}
metadata:
  name: {{ name }}
  namespace: {{ namespace }}
  labels:
    app: {{ name }}
    service: {{ name }}
spec:
  replicas: 1
{% if 'apps.openshift.io' in api_groups %}
  selector:
    app: {{ name }}
    service: {{ name }}
{% else %}
  selector:
    matchLabels:
      app: {{ name }}
      service: {{ name }}
{% endif %}
  template:

    metadata:
      labels:
        app: {{ name }}
        service: {{ name }}

    spec:

      containers:

      - image: registry.gitlab.com/matilda.peak/chronicler{{ image_suffix }}:{{ image_tag }}
        name: chronicler
        imagePullPolicy: {{ image_pull_policy }}
        ports:
        - containerPort: 9090
          protocol: TCP
        env:
        - name: OUTBOUND_PORT
          value: "{{ outbound_port }}"
        - name: RUNNER_KEY
          value: "{{ runner_key }}"
        resources:
          requests:
            cpu: 500m
            memory: 32Mi
          limits:
            cpu: 1000m
            memory: 128Mi

        # Define a securityContext to satisfy the post-v1.21 Security Standards.
        # In v1.22 and later security can be restricted using namespace labels.
        # In v1.25 and later it is restricted using namespace labels.
        #
        # Here we satisfy the built-in 'restricted' policy, which requires: -
        # - allowPrivilegeEscalation: false
        # - runAsNonRoot: true
        # - capabilities: (drop ALL)
        # - seccompProfile: (type RuntimeDefault)
        # We also go further and set a specific user and group ID.
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
          runAsUser: 1000
          runAsGroup: 1000
